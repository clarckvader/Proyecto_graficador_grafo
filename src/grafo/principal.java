/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grafo;

import java.util.Vector;
import grafo.Nodo;
import grafo.Arista;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;
import java.awt.Point;
import java.awt.Rectangle;
import javax.swing.JOptionPane;

/**
 *
 * @author roberto
 */
public class principal extends javax.swing.JFrame {

    private Vector<Nodo> vectorNodos;
    private Vector<Arista> VectorArista;
    private Point p1, p2;
    private Nodo nodoMover;
    private int iNodo;

    /**
     * Creates new form principal
     */
    public principal() {
        this.vectorNodos = new Vector<>();
        this.VectorArista = new Vector<>();

        initComponents();
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        for (Nodo nodos : vectorNodos) {
            nodos.pintar(g);
            
        }
        for (Arista arista : VectorArista) {
            arista.pintar(g);
           

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

        if (evt.getButton() == MouseEvent.BUTTON1) {
            String nombre = JOptionPane.showInputDialog("Ingrese el nombre del nodo");
            this.vectorNodos.add(new Nodo(evt.getX(), evt.getY(), nombre));
            repaint();
        }
        else if(evt.getButton() == MouseEvent.BUTTON3){
            for(Nodo nodo : vectorNodos){
                if(new Rectangle( nodo.getX() - Nodo.d/2, nodo.getY() - Nodo.d/2, Nodo.d, Nodo.d).contains(evt.getPoint())){
                    if(p1 == null){
                        p1 = new Point(nodo.getX(), nodo.getY());
                    }else{
                        p2 = new Point(nodo.getX(), nodo.getY());
                        String peso = JOptionPane.showInputDialog("Ingrese el peso del nodo");
                        this.VectorArista.add( new Arista(p1.x, p1.y, p2.x, p2.y, peso));
                        repaint();
                        p1=null;
                        p2=null;
                    }
                }
            }
        }
    }//GEN-LAST:event_formMouseClicked

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
       int iN = 0;
       for(Nodo nodo : vectorNodos){
           if( new Rectangle(nodo.getX()- Nodo.d/2, nodo.getY()- Nodo.d/2, Nodo.d, Nodo.d).contains(evt.getPoint())){
               nodoMover = nodo;
               iNodo = iN;
               break;
               
           }
           iN++;
           
       }
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
      nodoMover = null;
      iNodo = -1;
    }//GEN-LAST:event_formMouseReleased

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
       if( nodoMover != null){
           this.vectorNodos.set(iNodo, new Nodo(evt.getX(), evt.getY(), nodoMover.getNombre()));
           int iE = 0;
           for (Arista arista : VectorArista) {
               if(new Rectangle(arista.getX1()- Nodo.d/2, arista.getY1()- Nodo.d/2, Nodo.d, Nodo.d).contains(evt.getPoint())){
                   this.VectorArista.set(iE, new Arista(evt.getX(), evt.getY(),arista.getX2(), arista.getY2(), arista.getPeso()));
               }
               else if(new Rectangle(arista.getX2()- Nodo.d/2, arista.getY2()- Nodo.d/2, Nodo.d, Nodo.d).contains(evt.getPoint())){
                   this.VectorArista.set(iE, new Arista(arista.getX1(), arista.getY1(),evt.getX(), evt.getY(), arista.getPeso()));
               }
               iE++;
               
           }
        }
       repaint();
    }//GEN-LAST:event_formMouseDragged

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
